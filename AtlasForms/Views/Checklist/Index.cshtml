@model AtlasForms.Models.JobActivationChecklist

@{
    ViewBag.Title = "Job Activation Checklist";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2 class="text-center">Atlas Residential & Commerical Services LLC</h2>
<br/>



@using (Html.BeginForm("SaveActivation", "Checklist", FormMethod.Post, new { id = "frmJobCheckList" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="row">
            <h4 style="display:inline-block;margin:15px 0 0 32px">@ViewBag.Title</h4>
            <button type="button" class="btn btn-primary btn-sm pull-right" id="print" style="margin-right: 30px;">
                Print <span class="glyphicon glyphicon-print white"></span>
            </button>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="checklist-form" class="panel-group">
            <div class="panel panel-primary" id="projectInformation" style="margin:15px">
                <div class="panel-heading-active" style="padding:5px">Project Information</div>
                <div class="panel-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.HiddenFor(model => model.PRJID, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.JobNumber, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.projectInformation.JobNumber, new { htmlAttributes = new { @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.JobNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.CompanyName, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.projectInformation.CompanyName, new { htmlAttributes = new { @style = "width:83%", @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Customer/Contractor Name", htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.Name, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Address, City, State, Zip", htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.Address, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.City, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.City, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.State, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.State, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.Zip, new { htmlAttributes = new { @class = "project-info", @style = "width:53%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.Zip, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Phone Number, Ext", htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.PhoneNumber, new { htmlAttributes = new { @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.CustomerProfile.Extension, new { htmlAttributes = new { @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerProfile.Extension, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Project Name", htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.Name, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Address, City, State, Zip", htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.Address, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.City, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.City, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.State, new { htmlAttributes = new { @class = "project-info", @style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.State, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.Zip, new { htmlAttributes = new { @class = "project-info", @style = "width:53%" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.Zip, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Contact Name/Phone Number, Ext", htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.ContactName, new { htmlAttributes = new { @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.ContactName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.PhoneNumber, new { htmlAttributes = new { @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectInformation.ProjectProfile.Extension, new { htmlAttributes = new { @class = "project-info" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ProjectProfile.Extension, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.CustomerType, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.projectInformation.CustomerType, new SelectList(ViewBag.ListCustomersType, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:47%" })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.Jobtype, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.projectInformation.Jobtype, new SelectList(ViewBag.ListJobType, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:47%" })
                            @Html.ValidationMessageFor(model => model.projectInformation.Jobtype, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.CustomerBidReference, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.projectInformation.CustomerBidReference, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.CustomerBidReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.ScopeWorkToBePerformed, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.projectInformation.ScopeWorkToBePerformed, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.projectInformation.ScopeWorkToBePerformed, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInformation.TypeOfLabour, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.projectInformation.TypeOfLabour, new SelectList(ViewBag.ListLabourTypes, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:47%" })
                            @Html.ValidationMessageFor(model => model.projectInformation.TypeOfLabour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary" style="margin:15px">
                <div class="panel-heading-active" style="padding:5px">Contract/Job Paperwork</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.CopyOfContractorPO, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.CopyOfContractorPO, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.CopyOfContractorPO, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.CopyOfContractorPOComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.CopyOfContractorPOComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.CopyOfContractorPOComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.BrokenScopephases, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.BrokenScopephases, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.BrokenScopephases, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.BrokenScopephasesComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.BrokenScopephasesComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.BrokenScopephasesComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.BidRollUp, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.BidRollUp, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.BidRollUp, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.BidRollUpComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.BidRollUpComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.BidRollUpComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.PackCFSPIRollUp, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.PackCFSPIRollUp, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.PackCFSPIRollUp, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.PackCFSPIRollUpcomments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.PackCFSPIRollUpcomments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.PackCFSPIRollUpcomments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.ApplicableQuote, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.ApplicableQuote, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                             "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.ApplicableQuote, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.ApplicableQuoteComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.ApplicableQuoteComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.ApplicableQuoteComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.DrawingConditions, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.DrawingConditions, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                             "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.DrawingConditions, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.DrawingConditionsComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.DrawingConditionsComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.DrawingConditionsComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.SitePhotos, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.SitePhotos, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.SitePhotos, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.SitePhotosComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.SitePhotosComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.SitePhotosComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.HardCard, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.HardCard, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.HardCard, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.HardCardComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.HardCardComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.HardCardComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.contractPaperWork.PayEnvelope, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.contractPaperWork.PayEnvelope, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                           "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.PayEnvelope, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.contractPaperWork.PayEnvelopeComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.contractPaperWork.PayEnvelopeComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.contractPaperWork.PayEnvelopeComments, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

            <div class="panel panel-primary" style="margin:15px">
                <div class="panel-heading-active" style="padding:5px">Bonding/Insurance/Labor</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.bondingInsurance.InsuranceCertification, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.bondingInsurance.InsuranceCertification, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { style = "font-size:12pt;width:100%" })
                            @Html.ValidationMessageFor(model => model.bondingInsurance.InsuranceCertification, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.bondingInsurance.InsuranceCertificationComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.bondingInsurance.InsuranceCertificationComments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bondingInsurance.InsuranceCertificationComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary" style="margin:15px">
                <div class="panel-heading-active" style="padding:5px">
                    Safety Requirements -
                    <span><i style="font-size:13px;color:white !important"> For all "Yes" answers, please provide additional details</i></span>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.SafetyOfficer, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.SafetyOfficer, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.SafetyOfficer, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.SafetyOfficerComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.SafetyOfficerComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.SafetyOfficerComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.SafetyMeeting, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.SafetyMeeting, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.SafetyMeeting, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.SafetyMeetingComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.SafetyMeetingComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.SafetyMeetingComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.DailySafetyMeeting, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.DailySafetyMeeting, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.DailySafetyMeeting, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.DailySafetyMeetingComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.DailySafetyMeetingComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.DailySafetyMeetingComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.PPENeeded, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.PPENeeded, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.PPENeeded, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.PPENeededComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.PPENeededComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.PPENeededComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.FallProtection, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.FallProtection, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.FallProtection, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.FallProtectionComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.FallProtectionComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.FallProtectionComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.EquipmentCertification, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.EquipmentCertification, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.EquipmentCertification, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.EquipmentCertificationComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.EquipmentCertificationComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.EquipmentCertificationComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.safetyRequirements.OtherHazards, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.safetyRequirements.OtherHazards, new SelectList(ViewBag.ListResponses, "Value", "Text"),
                            "-Select-", new { @style = "font-size:12pt;width:100%", @class = "safety-field" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.OtherHazards, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.safetyRequirements.OtherHazardsComments, htmlAttributes: new { @class = "control-label col-md-1 project-labels" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.safetyRequirements.OtherHazardsComments, new { @class = "form-control safety-comments" })
                            @Html.ValidationMessageFor(model => model.safetyRequirements.OtherHazardsComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary" style="margin:15px">
                <div class="panel-heading-active" style="padding:5px">Other Important Factors</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.otherImportantFactors.OtherPertinentInformation, htmlAttributes: new { @class = "control-label col-md-3 project-labels" })
                        <div class="col-md-7">
                            @Html.TextAreaFor(model => model.otherImportantFactors.OtherPertinentInformation, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.otherImportantFactors.OtherPertinentInformation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.projectInformation.Estimator, htmlAttributes: new { @class = "control-label col-md-2 project-labels" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.projectInformation.Estimator, new { @class = "form-control project-info" })
                        @Html.ValidationMessageFor(model => model.projectInformation.Estimator, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.DateCompleted, htmlAttributes: new { @class = "control-label col-md-4 project-labels" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.DateCompleted, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DateCompleted, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2 project-labels" })
                    <div class="col-md-2">
                        @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.DateReviewed, htmlAttributes: new { @class = "control-label col-md-4 project-labels" })
                    <div class="col-md-2">
                        @Html.ValidationMessageFor(model => model.DateReviewed, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="pull-right">
                <input type="submit" value="Save Activation" id="btnSaveActivation" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<style>
    input, select, textarea {
        border: 1px solid #808080 !important;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
    <link href="http://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.min.css" type="text/css" rel="stylesheet" />
    <script src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/jquery.inputmask.bundle.js"></script>

    <script>
        $(function () {
            $('#DateCompleted,#DateReviewed').datepicker({
                startDate: new Date(),
                todayHighlight: true,
                todayBtn: 'linked',
                orientation: 'bottom right',
                format: 'mm/dd/yyyy',
                autoclose: true
            });
            var baseUrl = function () {
                var href = window.location.href.split('/');
                return href[0] + '//' + href[2] + '/' + href[3] + '/';
            }
            $(".project-info").attr('readonly', 'readonly');
            $(".project-info").css("background-color", "#f1f1f1");
            $("#projectInformation_CustomerProfile_PhoneNumber, #projectInformation_ProjectProfile_PhoneNumber").inputmask({ "mask": "(999) 999-9999" });

            $("#frmJobCheckList").on('submit', function () {

                var ErrorComments = '<span class="text-danger field-validation-error"><span>Comments Required</span></span>';
                var errorCount = 0;
                $(".safety-field").each(function () {
                    var commentsField = $(this).closest('.form-group').find('textarea');
                    if (($(this).val() == 1) && (commentsField.val() == "")) {
                        $(commentsField).after(ErrorComments);
                        errorCount++;
                    }
                    else {
                        $(this).closest('.form-group').find('textarea').after("");
                    }
                });
                return (errorCount == 0);
                //$("#frmJobCheckList").submit();
            });

            $(".safety-comments").change(function () {
                if($(this).val()!=""){
                    $(this).next('span').remove();
                }
            })

            $("#print").click(function () {
                window.open(baseUrl() + 'Report/JobActivation/id/' + $("#PRJID").val());
            });
        });

    </script>
}